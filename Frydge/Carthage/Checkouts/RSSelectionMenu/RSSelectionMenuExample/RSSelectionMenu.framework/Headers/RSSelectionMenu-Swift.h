// Generated by Apple Swift version 3.1 (swiftlang-802.0.53 clang-802.0.42)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if defined(__has_attribute) && __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if defined(__has_attribute) && __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if defined(__has_feature) && __has_feature(modules)
@import ObjectiveC;
@import UIKit;
@import Foundation;
@import CoreGraphics;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"

@interface NSObject (SWIFT_EXTENSION(RSSelectionMenu))
@end


@interface NSObject (SWIFT_EXTENSION(RSSelectionMenu))
@end

@class RSSelectionTableView;
@class NSBundle;
@class NSCoder;

/// RSSelectionMenuController
SWIFT_CLASS("_TtC15RSSelectionMenu15RSSelectionMenu")
@interface RSSelectionMenu : UIViewController
@property (nonatomic, strong) RSSelectionTableView * _Nullable tableView;
/// unique key for comparision when datasource is other than String or Int array
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull uniqueKey;)
+ (NSString * _Nonnull)uniqueKey SWIFT_WARN_UNUSED_RESULT;
+ (void)setUniqueKey:(NSString * _Nonnull)value;
/// controller should dissmiss on selection - default is true for single selection
@property (nonatomic) BOOL shouldDismissOnSelect;
- (void)viewDidLoad;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIPresentationController;
@class UIPopoverPresentationController;

@interface RSSelectionMenu (SWIFT_EXTENSION(RSSelectionMenu)) <UIPopoverPresentationControllerDelegate, UIAdaptivePresentationControllerDelegate>
- (UIModalPresentationStyle)adaptivePresentationStyleForPresentationController:(UIPresentationController * _Nonnull)controller SWIFT_WARN_UNUSED_RESULT;
- (BOOL)popoverPresentationControllerShouldDismissPopover:(UIPopoverPresentationController * _Nonnull)popoverPresentationController SWIFT_WARN_UNUSED_RESULT;
@end


@interface RSSelectionMenu (SWIFT_EXTENSION(RSSelectionMenu))
@end


@interface RSSelectionMenu (SWIFT_EXTENSION(RSSelectionMenu))
@end

@class UIColor;

@interface RSSelectionMenu (SWIFT_EXTENSION(RSSelectionMenu))
/// custom cell
- (void)registerNibWithNibName:(NSString * _Nonnull)nibName forCellReuseIdentifier:(NSString * _Nonnull)forCellReuseIdentifier;
/// Searchbar
- (void)addSearchBarWithPlaceHolder:(NSString * _Nullable)placeHolder tintColor:(UIColor * _Nullable)tintColor completion:(NSArray * _Nonnull (^ _Nonnull)(NSString * _Nonnull))completion;
@end


/// RSSelectionMenuDataSource
SWIFT_CLASS("_TtC15RSSelectionMenu25RSSelectionMenuDataSource")
@interface RSSelectionMenuDataSource : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

@class UITableView;
@class UITableViewCell;

@interface RSSelectionMenuDataSource (SWIFT_EXTENSION(RSSelectionMenu)) <UITableViewDataSource>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end


@interface RSSelectionMenuDataSource (SWIFT_EXTENSION(RSSelectionMenu))
@end


@interface RSSelectionMenuDataSource (SWIFT_EXTENSION(RSSelectionMenu))
@end


SWIFT_CLASS("_TtC15RSSelectionMenu23RSSelectionMenuDelegate")
@interface RSSelectionMenuDelegate : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface RSSelectionMenuDelegate (SWIFT_EXTENSION(RSSelectionMenu))
/// check for selection status
- (BOOL)showSelectedWithObject:(id _Nonnull)object SWIFT_WARN_UNUSED_RESULT;
@end


@interface RSSelectionMenuDelegate (SWIFT_EXTENSION(RSSelectionMenu)) <UITableViewDelegate, UIScrollViewDelegate>
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


@interface RSSelectionMenuDelegate (SWIFT_EXTENSION(RSSelectionMenu))
@end

@class UISearchController;

/// RSSelectionMenuSearchDelegate
SWIFT_CLASS("_TtC15RSSelectionMenu29RSSelectionMenuSearchDelegate")
@interface RSSelectionMenuSearchDelegate : NSObject
@property (nonatomic, readonly, strong) UISearchController * _Nonnull searchController;
/// to execute on search event
@property (nonatomic, copy) void (^ _Nullable didSearch)(NSString * _Nonnull);
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


@interface RSSelectionMenuSearchDelegate (SWIFT_EXTENSION(RSSelectionMenu)) <UISearchResultsUpdating>
- (void)updateSearchResultsForSearchController:(UISearchController * _Nonnull)searchController;
@end


/// RSSelectionTableView
SWIFT_CLASS("_TtC15RSSelectionMenu20RSSelectionTableView")
@interface RSSelectionTableView : UITableView
- (nonnull instancetype)initWithFrame:(CGRect)frame style:(UITableViewStyle)style OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@interface RSSelectionTableView (SWIFT_EXTENSION(RSSelectionMenu))
@end


@interface UIStoryboard (SWIFT_EXTENSION(RSSelectionMenu))
@end


@interface UITableViewCell (SWIFT_EXTENSION(RSSelectionMenu))
@end


@interface UIViewController (SWIFT_EXTENSION(RSSelectionMenu))
- (BOOL)isPresented SWIFT_WARN_UNUSED_RESULT;
@end

#pragma clang diagnostic pop
